// Code generated by MockGen. DO NOT EDIT.
// Source: songlibrary/internal/musicapi (interfaces: MusicAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	models "songlibrary/internal/models"

	gomock "github.com/golang/mock/gomock"
)

// MockMusicAPI is a mock of MusicAPI interface.
type MockMusicAPI struct {
	ctrl     *gomock.Controller
	recorder *MockMusicAPIMockRecorder
}

// MockMusicAPIMockRecorder is the mock recorder for MockMusicAPI.
type MockMusicAPIMockRecorder struct {
	mock *MockMusicAPI
}

// NewMockMusicAPI creates a new mock instance.
func NewMockMusicAPI(ctrl *gomock.Controller) *MockMusicAPI {
	mock := &MockMusicAPI{ctrl: ctrl}
	mock.recorder = &MockMusicAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMusicAPI) EXPECT() *MockMusicAPIMockRecorder {
	return m.recorder
}

// GetSongDetailsFromAPI mocks base method.
func (m *MockMusicAPI) GetSongDetailsFromAPI(arg0, arg1 string) (*models.SongDetailFromAPI, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSongDetailsFromAPI", arg0, arg1)
	ret0, _ := ret[0].(*models.SongDetailFromAPI)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSongDetailsFromAPI indicates an expected call of GetSongDetailsFromAPI.
func (mr *MockMusicAPIMockRecorder) GetSongDetailsFromAPI(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSongDetailsFromAPI", reflect.TypeOf((*MockMusicAPI)(nil).GetSongDetailsFromAPI), arg0, arg1)
}
